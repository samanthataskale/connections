-- DIRECTORIES --
data: Temporary files that hold graphs. Nothing specific / important
GraphClass: files related to graph creation
- author.py: holds the Author class, which are used for nodes
- connection.py: holds the Connection class and its children, which are used for edges
- edge_color.py: Basically an enum for edge colors based on the subchild of Connection that an edge uses
- GraphClass.py: Holds the Graph class and the expand_node function, which are used for graph creation
- IDConstants.py: Holds data related to the datasources 
libdatasources: Has all the files related to specific API lookups
- DataSource.py: the parent class for all datasource classes
- find_in_other_databases.py: Contains bulk_lookup, which connects the ids across databases. 
- PatentView.py: holds the functions for PatentView lookup
- SemanticScholar.py: holds the functions for SemanticScholar lookup
static: Extra files to make make the .html files functional
- lib: Bunch of library files generated by pyvis. 
-- utils.js: Does the filtering for the graph based on the text boxes
- custom.css: style file for all .html files. Most of the entries are per id, anyway.
- graph.js: Javascript file for graph creation / graph.html
- import_graph.js: Javascript file that contains graph importing functionality
- select.js: Generated by pyvis. Deals with the frontend of the filter boxes
- SSlovo.svg: SS logo, as per the license terms
templates: All the HTML files
- base.html: The base for all files, which defines some libraries / title
- error_page.html: Generic page that is shown whenever there is some error.
- graph.html: The graph page for the /graph endpoint
- header.html: Has the header, including the SS logo for compliance
- index.html: The main page, contains the initial lookup forms.
- information.html: The information page, which contains info about the website
- query_results.html: The .html file for the /author-disambig endpoint. Contains JS code in <script> tags.

-- FILES --
app.py: Defines the endpoints for the server
kill_server.sh: Stops the server on the VM
lookup_forms.py: Defines the forms used in index.html and the "/" endpoint.
run_server.sh: Starts the server on the VM